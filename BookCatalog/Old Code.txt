    private void NavigationViewControl_ItemInvoked(NavigationView sender, NavigationViewItemInvokedEventArgs args)
    {
        if (args.IsSettingsInvoked == true)
        {
            NavigationViewControl_Navigate(typeof(SettingsPage), args.RecommendedNavigationTransitionInfo);
        }
        else if (args.InvokedItemContainer != null)
        {
            Type navPageType = Type.GetType(args.InvokedItemContainer.Tag.ToString());
            NavigationViewControl_Navigate(navPageType, args.RecommendedNavigationTransitionInfo);
        }
    }

    private void NavigationViewControl_Navigate(Type navPageType, NavigationTransitionInfo transitionInfo)
    {
        // Get the page type before navigation so you can prevent duplicate
        // entries in the backstack.
        Type preNavPageType = NavigationFrame.CurrentSourcePageType;

        // Only navigate if the selected page isn't currently loaded.
        if (navPageType is not null && !Type.Equals(preNavPageType, navPageType))
        {
            var item = ViewModel.NavigationViewService.GetSelectedItem(navPageType);
            if (item == null || item.Tag == null) { return; }

            var page = App.GetService<CatalogPage>();

            switch (item.Tag)
            {
                case "Add":
                    page.AddBookItems();
                    break;
                case "Delete":
                    page.DeleteBookItem();
                    break;
                default:
                    break;
            }

            NavigationFrame.Navigate(navPageType, null, transitionInfo);

            NavigationViewControl.Header = item.Content;
            NavigationViewControl.SelectedItem = item;
        }
    }



                        <NavigationViewItem
                            <!--x:Uid="Shell_Add"-->
                            <!--helpers:NavigationHelper.NavigateTo="BookCatalog.ViewModels.AddViewModel"-->
                            <!--Content="Add"-->
                            Icon="Add"
                            Tag="Add" />
                        <NavigationViewItem
                            <!--x:Uid="Shell_Delete"-->
                            <!--helpers:NavigationHelper.NavigateTo="BookCatalog.ViewModels.DeleteViewModel"-->
                            <!--Content="Delete"-->
                            Icon="Delete"
                            Tag="Delete" />



                            helpers:NavigationHelper.NavigateTo="BookCatalog.ViewModels.AddViewModel"
							helpers:NavigationHelper.NavigateTo="BookCatalog.ViewModels.DeleteViewModel"
							